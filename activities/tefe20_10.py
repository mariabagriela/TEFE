# -*- coding: utf-8 -*-
"""Tefe20.10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xgUIKKXHUmBRog4aYHPt6h2oxga5SbYR
"""

import numpy as np
np.random.seed(12803112)

x0 = 110
y0 = 100
sC = 4
sL = 3
N = 1000
lx = []
ly = []
n = 0
for i in range(N):
  Ec = sC*np.random.randn()
  x = x0 + sL*np.random.randn() + Ec
  y = y0 + sL*np.random.randn() + Ec
  lx.append(x)
  ly.append(y)
  if (x-x0)*(y-y0)>0:
    n+=1


l = np.stack((lx,ly), axis = 0)
c = np.cov(l)
r = np.corrcoef(l)

R = r[0][1]
C = c[0][1]
sx = np.std(lx,ddof = 1)
sy = np.std(ly, ddof = 1)
sV = sx*sy*np.sqrt(((1+R)**2)/(N-1))
sR = (1-R**2)/(np.sqrt(N-1))
print(f'V = {C:.5g} ({sV:.5g}) \nR = {R:.5g} ({sR:.5g})')

Lx = np.array(lx)
Ly = np.array(ly)
w = Lx +Ly
sw = np.std(w , ddof = 1)
ssw = sw/np.sqrt(2*(N-1))

z = Lx - Ly
sz = np.std(z, ddof = 1)
ssz = sz/np.sqrt(2*(N-1))

print(f'\nsw = {sw:.5g} ({ssw:5g}) \nsz = {sz:.5g} ({ssz:.5g})')

sw_prop = np.sqrt(4*sC**2 +2*sL**2)
sz_prop = np.sqrt(2*sL**2)

print(f'\nsw_prop = {sw_prop:.2g} \nsz_prop = {sz_prop:.2g}')
print(f'\nn = {n} ({np.sqrt(n*(1-n/N)):.5g})')
print(f'\nf = {n/N} ({np.sqrt(n*(1-n/N))/N:.5g})')