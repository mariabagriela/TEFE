# -*- coding: utf-8 -*-
"""Tefe10.11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E7cF1kvP1Gr1QhiPuyWr3BV_fg1ZJYNf
"""

import numpy as np
import matplotlib.pyplot as plt

#np.random.seed(12803112)
#np.random.seed(12557098)
s = 0.5
t = np.arange(0, 10+1, 1)

y = 20 + 3*t + 0.5*np.random.randn(len(t))

g = np.zeros((2, len(t)))
M = np.zeros((2, 2))
D = np.zeros(2)
g[0] = t
g[1] = 1

for i in range(2):
  D[i] = sum(g[i]*y/(s**2))
  for j in range(2):
    M[i][j] = sum(g[i]*g[j]/(s**2))

cov = np.linalg.inv(M)

A = np.dot(cov, D)

print(f'Ã = {A}')
print(f'\nMatriz de cov \n{cov}')
print(f'\nsatil = {np.sqrt(cov[0][0]):.2g}')
print(f'\nsbtil = {np.sqrt(cov[1][1]):.2g}')

rho = cov[0][1]/np.sqrt(cov[0][0]*cov[1][1])
print(f'\nrho = {rho:.3f}')

chi2 = sum(((y - A[0]*t - A[1])/s)**2)
print(f'chi² = {chi2:.1f}')

#@title Monte Carlo

np.random.seed(12803112)
#np.random.seed(12557098)
#np.random.seed(12693500)

Nrep = 10_000
coef = []
chi2 = []

for k in range(Nrep):
  y = 20 + 3*t + 0.5*np.random.randn(len(t))
  g = np.zeros((2, len(t)))
  M = np.zeros((2, 2))
  D = np.zeros(2)
  g[0] = t
  g[1] = 1

  for i in range(2):
    D[i] = sum(g[i]*y/(s**2))
    for j in range(2):
      M[i][j] = sum(g[i]*g[j]/(s**2))

  cov = np.linalg.inv(M)

  A = np.dot(cov, D)

  coef.append(A)
  chi2.append(sum(((y - A[0]*t - A[1])/s)**2))

coef = np.array(coef)

a = coef[:,0]
b = coef[:,1]

print(f'satil = {a.std():.2g}')
print(f'sbtil = {b.std():.2g}')

cov2 = np.cov(a, b)

rho2 = cov2[0][1]/np.sqrt(cov2[0][0]*cov2[1][1])
print(f'\nrho = {rho2:.3f}')

plt.hist(chi2,30)
plt.title('Histograma de $\chi^2$')
plt.xlabel('$\chi^2$')
plt.ylabel('Frequência')
sanduicheiche = np.mean(chi2)
print(f'\nchi²= {sanduicheiche:.2f}')
print(f'\nschi²={np.std(chi2)/(np.sqrt(Nrep)):.3f}\n')

#@title Gráficos de Dispersão
plt.scatter(a,b,s=1)
plt.title('Gráfico de dispersão de a e b')
plt.xlabel('Valores de a')
plt.ylabel('Valores de b')
plt.show()
print()
plt.scatter(a,chi2,s=1)
plt.title('Gráfico de dispersão de a e $\chi^2$')
plt.xlabel('Valores de a')
plt.ylabel('Valores de $\chi^2$')
plt.show()
print()
plt.scatter(b,chi2,s=1)
plt.title('Gráfico de dispersão de b e $\chi^2$')
plt.xlabel('Valores de b')
plt.ylabel('Valores de $\chi^2$')
plt.show()